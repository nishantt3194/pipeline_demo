plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.liquibase.gradle" version "2.2.0"

}

group = 'com.futurealgos'
version = '2.0.0'
sourceCompatibility = '17'    

      

ext {
	set('springCloudAzureVersion', "5.0.0")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()

	maven {
		url 'https://fal-packages-254367592253.d.codeartifact.ap-south-1.amazonaws.com/maven/starter-packages/' 
		credentials {
			username "aws"
			password "eyJ2ZXIiOjEsImlzdSI6MTY4OTU3Mjg5OCwiZW5jIjoiQTEyOEdDTSIsInRhZyI6Ii1NQUpGdnFKNFZXaTdRaFlJWEZra2ciLCJleHAiOjE2ODk2MTYwOTgsImFsZyI6IkExMjhHQ01LVyIsIml2IjoiZEU2eFJacFlUWkJ5d3FwdyJ9.uSCD7Fe6AZ-bSft0n3EF2g.SrTMLp00pzZFEhnk.ZfCOipcdyxYox5cReU1O1PgfNn8cdLzRbmCqo57dj01jYbdr7tqrWCwoJ-Q9hQgFVeqYudDtxePY59bXpfmLGgF2ddCsDdrfWaeXDaAZ774XuGmaUBbVhJpU1OcPen7oxxWpJQKP6ZbX7KvPxioNBC77pdvBdvuX8tml5UoX3iBvOXuWeSnXunRvDHdXJMH6Q7QJYIzZF70GkI4u-bX0HpMYYbK-FOErVuA-jR40ey6paJZnY8M9m4vU3IIOI36JKc4ywE4lxJ8wDcnZCp46FEEcxIZluiEdmu2LISMhwcXAaS4GQULe-uJL8LnMpb5fIoEHLqqf1a2JryczEjVWt2VCTWUVKabZ7X8fZLYWVYbAr2l2tLmjrq8Rgk_NfRIc182udTge0tbqK6lb4fcWsSR1Qa2BS-GngYhkALwbX7voi-LR1_piMW3WCu9VuznP2tXx53vMwS-TgcrGUAhP7JIvJ-8IGzyJjaDIY2kHxTfADpA393Qyy6VKGQorJMQiFKtdkruLbiXdY0lhWQtA7_wEsay_FuZJeHgqEsEhAtPZGRoH7K8YkfW21jq6Lp6zqG9A9CTsiTeVhpNjamqGmiLSEZVDQYIqiq4BtxfE-aFBmKWAQZuYCCnvH9-Ycum-laun0iPEOWEogf50F7jdX3gipxwtuG3lkMUkbodEA4eEFwUhSbLBdykJp3Hsy1Uk6j5we7-eGtt5yS155M4ztjJlmwLxeUqa5Q-mU--U9Dqc1MQrm0FptsilV0N6_Q64hp22Va-s2tAf-0g5rNtexkX_p5_Hew_PeV_Ydo5-0acm3jYePu9KnfGRcGb05V_YCdRsxdiVZFBXl5jj0KI4hQsys3wREgToMwF5GpXUA_zIvw2s9sKNXG27cmUwEoLihdeIWlD_LapeqaK9KAmcjXbAmGB3hszSGZTtcQrw-ozxMktKORPYgB-7OowvdA.mRod66ShDa--Lz8OUzlGAQ"


		}
	}
}

bootBuildImage {
	imageName = "bd-administration-service:1.0.0"
}

dependencies {
	implementation 'com.futurealgos:specs-starter:1.2-M2'
	implementation 'com.futurealgos.data:sql-data-starter:1.0-M48'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	implementation 'com.azure.spring:spring-cloud-azure-starter-active-directory'

	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'

	implementation 'org.liquibase:liquibase-core'
	implementation 'org.liquibase.ext:liquibase-hibernate6:4.20.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

	implementation 'io.sentry:sentry-spring-boot-starter:6.17.0'
	implementation 'io.sentry:sentry-spring-boot-starter-jakarta:6.17.0'

	runtimeOnly 'com.mysql:mysql-connector-j'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

dependencyManagement {
	imports {
		mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


bootRun {
	def env = [:]

	def envFile = '.env'

	def file = new File(envFile)
	if (file.exists()) {
		file.eachLine { line ->
			def pair = line.split("=", 2)
			if (pair.length == 2) {
				def (name, value) = pair
				env[name.trim()] = value.trim()
			}
		}
	}

	env.each { key, value -> environment key, value }
}
